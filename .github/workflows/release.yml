name: 'Release binary'
on:
  workflow_dispatch:
    inputs:
      test_release:
        description: 'Test release'
        required: false
        type: boolean

  release:
    types: [created]

jobs:
  release:
    if: ${{ github.event_name == 'release' || github.event.inputs.test_release == 'true' }}
    strategy:
      fail-fast: true
      matrix:
        platform:

            # linux
          - release_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: khmercut
            name: khmercut-Linux-x86_64-musl.tar.gz
            command: build

          - release_for: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            bin: khmercut
            name: khmercut-Linux-aarch64-musl.tar.gz
            command: build


            # windows
          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: khmercut.exe
            name: khmercut-Windows-x86_64.zip
            command: build

          - release_for: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: khmercut.exe
            name: khmercut-Windows-aarch64.zip
            command: build

            # macOS
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: khmercut
            name: khmercut-Darwin-x86_64.tar.gz
            command: build

          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: khmercut
            name: khmercut-Darwin-aarch64.tar.gz
            command: build

            # wasm
          - release_for: WASM
            os: ubuntu-20.04
            target: wasm32-unknown-unknown
            bin: khmercut.wasm
            name: khmercut-wasm.tar.gz
            command: build

        toolchain:
          - stable

    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cross
        run: cargo install cross

      - name: Update Cargo.lock
        run: cargo update

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

      - name: Package as archive
        shell: bash
        run: |
            cd target/${{ matrix.platform.target }}/release
            if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
            else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
            fi
            cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
            name: khmercut-${{ matrix.platform.release_for }}
            path: "khmercut-*"

      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
            draft: true
            files: "khmercut*"
            body_path: CHANGELOG.md
